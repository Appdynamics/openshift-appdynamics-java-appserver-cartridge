#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

case "$1" in
  -v|--version)
    version="$2"
esac

appd_agent_dir="${OPENSHIFT_APPD_JAVA_DIR}AppServerAgent/"
echo "${appd_agent_dir}" > "${OPENSHIFT_APPD_JAVA_DIR}env/OPENSHIFT_APPD_AGENT_DIR"

# unzip and copy the AppServerAgent directory into the cartridge's home dir
unzip ${OPENSHIFT_APPD_JAVA_DIR}versions/${version}/AppServerAgent.zip -d ${appd_agent_dir}
client_message "Unzipped latest version of AppServerAgent from versions directory to ${appd_agent_dir}"


#The erb should be processed into controller-info.xml as the .erb files in env dir is processed before bin/setup script is called.
#(Refer :: http://openshift.github.io/documentation/oo_cartridge_developers_guide.html#erb-processing)
#Copy and overwrite the processed controller-info.xml into OPENSHIFT_APPD_AGENT_DIR/conf/.
cp -f ${OPENSHIFT_APPD_JAVA_DIR}env/controller-info.xml ${appd_agent_dir}conf/
client_message "Processed the controller-info.erb file"

#Detecting primary cartridge
PRIMARY_CART=$(ruby_sdk "primary_cartridge_manifest['Name']")
client_message "The primary cartridge name is: ${PRIMARY_CART}"

case "$PRIMARY_CART" in 
  jbossas) 
    client_message "Valid primary cartridge detected - jbossas."
    ;;
  jbosseap)
    client_message "Valid primary cartridge detected - jbosseap."
    ;;
  jbossews)
    client_message "Valid primary cartridge detected - jbossews."
    ;;
  *)
    # Invalid cartridge type
    client_error "Invalid primary cartridge: ${PRIMARY_CART}. Valid ones: jbossas,jbosseap,jbossews"
    exit 109 
    ;;
esac

# Using the hooks for primary cartridge to insert the javaagent options for AppD 
HOOKS="${OPENSHIFT_REPO_DIR}.openshift/action_hooks/pre_start_${PRIMARY_CART}
${OPENSHIFT_REPO_DIR}.openshift/action_hooks/pre_restart_${PRIMARY_CART}
${OPENSHIFT_REPO_DIR}.openshift/action_hooks/pre_reload_${PRIMARY_CART}"


for hook in $HOOKS; do
  client_message "Processing $hook"

  if [ ! -e "$hook" ]; then
    echo '#!/bin/bash' >> $hook
    chmod 700 $hook
  fi

  if [ -w "$hook" ]; then
    echo -e "source \${OPENSHIFT_APPD_JAVA_DIR}conf/javaagent_${PRIMARY_CART}.conf" >> $hook
  else
    client_message "WARNING: The file $hook is not writable."
  fi
done


client_message "Finished processing the setup script."

exit 0
